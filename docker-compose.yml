version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: harmonic-backend
    ports:
      - "8765:8765"
    environment:
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NVAPI_KEY=${NVAPI_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Model Configuration
      - OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL:-gpt-4o-mini}
      - TEXT_EMB_MODEL=${TEXT_EMB_MODEL:-text-embedding-3-small}
      - NV_MODEL=${NV_MODEL:-meta/llama-3.1-405b-instruct}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-sonnet-4-5}
      
      # Server Configuration
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8765
      
      # Feature Flags
      - ENABLE_EMBEDDINGS=${ENABLE_EMBEDDINGS:-true}
      - ENABLE_AUDIO=${ENABLE_AUDIO:-true}
      - USE_EMBEDDING_CACHE=${USE_EMBEDDING_CACHE:-true}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-10000}
      
      # Performance
      - MAX_SESSIONS=${MAX_SESSIONS:-100}
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-3600}
      - TOKEN_BATCH_SIZE=${TOKEN_BATCH_SIZE:-10}
      
      # Redis (if enabled)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - harmonic-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.connect(('localhost',8765)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis

  frontend:
    image: nginx:alpine
    container_name: harmonic-frontend
    ports:
      - "${FRONTEND_PORT:-8000}:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - harmonic-net
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: harmonic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - harmonic-net
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis-data:
    driver: local

networks:
  harmonic-net:
    driver: bridge